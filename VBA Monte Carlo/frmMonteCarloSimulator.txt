' --------------------------------------------------------------------------------------
' UserForm: frmMonteCarloSimulator
' Description: Interface graphique du simulateur
' --------------------------------------------------------------------------------------
Option Explicit

' Référence aux constantes du module principal
' Ces constantes sont déjà déclarées comme Public dans mdlMain
' Pas besoin de les redéclarer ici

Private Sub UserForm_Initialize()
    ' Initialiser les valeurs par défaut
    txtIterations.Text = "10000"
    txtReturn.Text = "5.5"
    txtVolatility.Text = "15.0"
    txtInitialAmount.Text = "100000"
    txtYears.Text = "5"
    
    ' Initialiser les onglets
    fraHistogram.Visible = True
    fraTimeEvolution.Visible = False
    fraDistribution.Visible = False
    
    ' Activer l'onglet Histogramme par défaut
    optHistogram.Value = True
    
    ' Définir le titre
    Me.Caption = "Simulateur Monte-Carlo pour l'Analyse des Risques Financiers"
End Sub

Private Sub cmdRunSimulation_Click()
    ' Vérifier les entrées
    If Not IsNumeric(txtIterations.Text) Or Val(txtIterations.Text) <= 0 Then
        MsgBox "Veuillez entrer un nombre d'itérations valide.", vbExclamation
        txtIterations.SetFocus
        Exit Sub
    End If
    
    If Not IsNumeric(txtReturn.Text) Then
        MsgBox "Veuillez entrer un rendement espéré valide.", vbExclamation
        txtReturn.SetFocus
        Exit Sub
    End If
    
    If Not IsNumeric(txtVolatility.Text) Or Val(txtVolatility.Text) <= 0 Then
        MsgBox "Veuillez entrer une volatilité valide.", vbExclamation
        txtVolatility.SetFocus
        Exit Sub
    End If
    
    If Not IsNumeric(txtInitialAmount.Text) Or Val(txtInitialAmount.Text) <= 0 Then
        MsgBox "Veuillez entrer un montant initial valide.", vbExclamation
        txtInitialAmount.SetFocus
        Exit Sub
    End If
    
    If Not IsNumeric(txtYears.Text) Or Val(txtYears.Text) <= 0 Then
        MsgBox "Veuillez entrer un horizon temporel valide.", vbExclamation
        txtYears.SetFocus
        Exit Sub
    End If
    
    ' Afficher un message de progression
    lblStatus.Caption = "Exécution de la simulation en cours..."
    Me.Repaint
    
    ' Désactiver les contrôles pendant la simulation
    EnableControls False
    
    ' Exécuter la simulation
    Call RunMonteCarloSimulation( _
        CLng(txtIterations.Text), _
        CDbl(txtReturn.Text), _
        CDbl(txtVolatility.Text), _
        CDbl(txtInitialAmount.Text), _
        CInt(txtYears.Text))
    
    ' Mettre à jour les résultats affichés
    UpdateResults
    
    ' Afficher le graphique approprié
    ShowSelectedChart
    
    ' Réactiver les contrôles
    EnableControls True
    
    ' Mettre à jour le message de statut
    lblStatus.Caption = "Simulation terminée avec succès."
End Sub

Private Sub EnableControls(enable As Boolean)
    ' Activer/désactiver les contrôles pendant la simulation
    txtIterations.Enabled = enable
    txtReturn.Enabled = enable
    txtVolatility.Enabled = enable
    txtInitialAmount.Enabled = enable
    txtYears.Enabled = enable
    cmdRunSimulation.Enabled = enable
    cmdExportReport.Enabled = enable
    cmdClose.Enabled = enable
    optHistogram.Enabled = enable
    optTimeEvolution.Enabled = enable
    optDistribution.Enabled = enable
End Sub

Private Sub UpdateResults()
    ' Mettre à jour les résultats affichés dans le formulaire
    Dim wsResults As Worksheet
    Set wsResults = ThisWorkbook.Worksheets(SHEET_RESULTS)
    
    lblMean.Caption = Format(wsResults.Range("B2").Value, "#,##0.00 €")
    lblStdDev.Caption = Format(wsResults.Range("B3").Value, "#,##0.00 €")
    lblMin.Caption = Format(wsResults.Range("B4").Value, "#,##0.00 €")
    lblMax.Caption = Format(wsResults.Range("B5").Value, "#,##0.00 €")
    lblVaR.Caption = Format(wsResults.Range("B6").Value, "#,##0.00 €")
    lblLossProb.Caption = Format(wsResults.Range("B7").Value, "0.00%")
End Sub

Private Sub ShowSelectedChart()
    ' Afficher le graphique sélectionné
    If optHistogram.Value Then
        fraHistogram.Visible = True
        fraTimeEvolution.Visible = False
        fraDistribution.Visible = False
        UpdateHistogramChart
    ElseIf optTimeEvolution.Value Then
        fraHistogram.Visible = False
        fraTimeEvolution.Visible = True
        fraDistribution.Visible = False
        UpdateTimeEvolutionChart
    ElseIf optDistribution.Value Then
        fraHistogram.Visible = False
        fraTimeEvolution.Visible = False
        fraDistribution.Visible = True
        UpdateDistributionChart
    End If
End Sub

Private Sub UpdateHistogramChart()
    ' Mettre à jour le graphique d'histogramme dans le formulaire
    Dim chartSheet As Chart
    
    For Each chartSheet In ThisWorkbook.Charts
        If chartSheet.Name = "Histogramme" Then
            chartSheet.CopyPicture Appearance:=xlScreen, Format:=xlPicture, Size:=xlScreen
            imgHistogram.Picture = Application.ClipboardImage
            Exit For
        End If
    Next
End Sub

Private Sub UpdateTimeEvolutionChart()
    ' Mettre à jour le graphique d'évolution temporelle dans le formulaire
    Dim chartSheet As Chart
    
    For Each chartSheet In ThisWorkbook.Charts
        If chartSheet.Name = "Évolution Temporelle" Then
            chartSheet.CopyPicture Appearance:=xlScreen, Format:=xlPicture, Size:=xlScreen
            imgTimeEvolution.Picture = Application.ClipboardImage
            Exit For
        End If
    Next
End Sub

Private Sub UpdateDistributionChart()
    ' Mettre à jour le graphique de distribution dans le formulaire
    Dim chartSheet As Chart
    
    For Each chartSheet In ThisWorkbook.Charts
        If chartSheet.Name = "Distribution Cumulée" Then
            chartSheet.CopyPicture Appearance:=xlScreen, Format:=xlPicture, Size:=xlScreen
            imgDistribution.Picture = Application.ClipboardImage
            Exit For
        End If
    Next
End Sub

Private Sub optHistogram_Click()
    ShowSelectedChart
End Sub

Private Sub optTimeEvolution_Click()
    ShowSelectedChart
End Sub

Private Sub optDistribution_Click()
    ShowSelectedChart
End Sub

Private Sub cmdExportReport_Click()
    ' Vérifier que la simulation a été effectuée
    Dim wsResults As Worksheet
    Set wsResults = ThisWorkbook.Worksheets(SHEET_RESULTS)
    
    If wsResults.Range("B2").Value = "" Then
        MsgBox "Veuillez d'abord exécuter une simulation.", vbExclamation
        Exit Sub
    End If
    
    ' Générer le rapport
    Call GenerateReport( _
        CLng(txtIterations.Text), _
        CDbl(txtReturn.Text), _
        CDbl(txtVolatility.Text), _
        CDbl(txtInitialAmount.Text), _
        CInt(txtYears.Text))
    
    ' Informer l'utilisateur
    MsgBox "Le rapport a été généré avec succès." & vbCrLf & _
           "Vous pouvez le consulter dans l'onglet '" & SHEET_REPORT & "'.", vbInformation
End Sub

Private Sub cmdClose_Click()
    ' Fermer le formulaire
    Unload Me
End Sub
